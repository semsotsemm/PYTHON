import os
import shutil

FOLDERS_TO_DELETE = ["bin", "obj"]

EXTENSIONS_TO_DELETE = [
    ".user",        
    ".vspscc",      
    ".vssscc",
    ".cache",       
    ".log",         
    ".wr"
]


def delete_unwanted_items_dotnet(directory, extensions, folders):
    print(f"–ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É C# –ø—Ä–æ–µ–∫—Ç–∞ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {directory}")

    for root, dirs, files in os.walk(directory, topdown=True):
        
        for file in files:
            if file.endswith(tuple(extensions)):
                file_path = os.path.join(root, file)
                try:
                    os.remove(file_path)
                    print(f"üóëÔ∏è –£–¥–∞–ª—ë–Ω —Å–ª—É–∂–µ–±–Ω—ã–π —Ñ–∞–π–ª: {file_path}")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}")
        
        dirs_to_remove = []
        for folder in folders:
            if folder in dirs:
                folder_path = os.path.join(root, folder)
                try:
                    shutil.rmtree(folder_path)
                    print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞ —Å–±–æ—Ä–∫–∏: {folder_path}")
                    
                    dirs_to_remove.append(folder)
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–∞–ø–∫–∏ {folder_path}: {e}")
        
        for folder in dirs_to_remove:
            dirs.remove(folder)



project_path  = input("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –ø—Ä–æ–µ–∫—Ç–æ–º: ")

delete_unwanted_items_dotnet(project_path, EXTENSIONS_TO_DELETE, FOLDERS_TO_DELETE)

print("\n–û—á–∏—Å—Ç–∫–∞ C# –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≥–æ—Ç–æ–≤ –∫ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞ GitHub.")